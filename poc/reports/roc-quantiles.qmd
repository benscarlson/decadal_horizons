---
title: "ROC-based quantiles"
format: 
  html:
    self-contained: true
    fig-format: jpeg
execute: 
  echo: true
  message: false
  warning: false
params:
  pd: ~/projects/decadal_horizons
  wd: NULL
  sesnm: NULL
  seed: NULL
  
---

#### `r strftime(Sys.time(),format='%Y-%m-%d')`

## Setup

```{r setup}

#Note interactive() is FALSE when clicking the render button
if(interactive()) {
  .pd <- '~/projects/decadal_horizons'
  .wd <- file.path(.pd,'analysis/poc/roc_quantiles')
} else {
  .pd <- params$pd
  .wd <- params$wd
}

pd <- function(...) file.path(.pd,...)
wd <- function(...) file.path(.wd,...)

#---- Initialize Environment ----#

source(pd('src/startup.r'))

invisible(assert_that(!is.null(.wd)))

#---- Libraries ----
suppressWarnings(
  suppressPackageStartupMessages({
    library(knitr)
    library(patchwork)
    library(pROC)
    library(sf)
    library(terra)
    library(qs)
  }))

tic() #For report execution time

#Source all files in the auto load funs directory
list.files(pd('src/funs/auto'),full.names=TRUE) %>% walk(source)
source(pd('src/funs/themes.r'))

theme_set(theme_eda)

```

Generate absences and find species-specific quantiles.

```{r}
# IDEA: all table grids should have the source raster attached to them
#   Source raster should have cell id for each raster

source(pd('src/poc/pep/absences.r'))

#Load Pep's data 
sp_cells <- qread(pd('data/pep/set_1/Bothriochloa_ewartiana.qs')) %>% as_tibble
rmodel <- rast(pd('data/pep/set_1/had12_ACCESS-ESM1-5_ssp585_spei_2055.tif'))

buffdist= 5e5
habitat_mask <- rnaturalearth::ne_download(type='land',category = 'physical', scale=10,returnclass = 'sf')
habitat_mask <- terra::rasterize(vect(habitat_mask),rmodel,touches=T)
plot(habitat_mask) #

 #Sanity checks
invisible(assert_that(all(sp_cells$cell < ncell(rmodel)))) #Make sure spp cell ids are within the range of rmodel cell ids
invisible(assert_that(ncell(rmodel)==ncell(habitat_mask))) #rmodel and habitat mask are the same size
invisible(assert_that(crs(rmodel,proj=TRUE)==crs(habitat_mask,proj=TRUE))) #habitat_mask does not have a crs

# pa==1 means presence, pa==0 means absence
abcs <- cheap_absences(sp_cells,rmodel,habitat_mask=habitat_mask,
  partial_absences=FALSE,include_presences=TRUE,method='buffer',
  buffdist=buffdist)

#Note 322 pres in the original file, but cheap_absences only returns 107
# This is due to habitat masking. Should look into this.
abcs %>% group_by(pa) %>% summarize(n=n())

#Per pep we can just keep years 1982:2014
had12 <- qread(pd('data/pep/set_1/had12_ACCESS-ESM1-5_ssp585.qs'))  %>%
  select(-c(x,y)) %>%
  pivot_longer(-cell,names_to='year') %>%
  filter(year %in% 1982:2014 & !is.na(value)) %>%
  mutate(cell=as.integer(cell),year=as.integer(year),value=as.integer(value)) #Reduce size in memory

spEnv <- had12 %>%
  inner_join(abcs %>% select(-n),by='cell') %>%
  mutate(pa=as.factor(pa))

ggplot(spEnv,aes(x=value,y=pa)) +
  geom_jitter() +
  labs(y='Presence')
```

Determine the quantile of the optimal threshold based on Youden's J (sens+spec-1)

```{r}

#Value is yearly time series so temporally autocorrelated
fit <- glm(pa ~ value, data = spEnv, family = binomial)

preds <- predict(fit, spEnv, type = "response")

rocd <- roc(spEnv$pa, preds)

#Maximum of Youden's J statistic
opt <- rocd$thresholds[which.max(rocd$sensitivities + rocd$specificities - 1)]

idx <- which.min(abs(preds - opt))
optVal <- spEnv$value[idx]

ecdf(spEnv$value)(optVal)

```

```{r finalize}

#---- Warnings ----
warns <- warnings()

if(length(warns) > 0) { cat('\n'); summary(warns); cat('\n') }

#---- Git Repo ----
repo <- git2r::repository(pd('src'))
gitSha <- git2r::sha(git2r::repository_head(repo)) %>% substr(1,7)

rmt <- git2r::remotes(repo)

if(length(rmt)) {
  #TODO: need to parse rmt when I have a repo that has a remote
  shaTxt <- glue('[{gitSha}](https://github.com/{rmt}/tree/{gitSha})')
} else {
  shaTxt <- gitSha
}

```

Commit when this report was run: `r shaTxt`

`r strftime(Sys.time(),format='%Y-%m-%d %H:%M')`. `r Sys.timezone()`

`r capture.output(toc())`